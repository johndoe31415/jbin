#!/usr/bin/python3
#	jbin - Joe's miscellaneous scripts, tools and configs
#	mkapt: Create /etc/apt/sources.list
#	Copyright (C) 2020-2023 Johannes Bauer
#
#	This file is part of jbin.
#
#	jbin is free software; you can redistribute it and/or modify
#	it under the terms of the GNU General Public License as published by
#	the Free Software Foundation; this program is ONLY licensed under
#	version 3 of the License, later versions are explicitly excluded.
#
#	jbin is distributed in the hope that it will be useful,
#	but WITHOUT ANY WARRANTY; without even the implied warranty of
#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#	GNU General Public License for more details.
#
#	You should have received a copy of the GNU General Public License
#	along with jbin. If not, see <http://www.gnu.org/licenses/>.
#
#	Johannes Bauer <JohannesBauer@gmx.de>

import collections
import textwrap
import datetime
import mako.template

definitions = [
	{
		"name": "Ubuntu",
		"releases": [
			("artful", "2017.10"),
			("bionic", "2018.04"),
			("cosmic", "2018.10"),
			("disco", "2019.04"),
			("eoan", "2019.10"),
			("focal", "2020.04"),
			("groovy", "2020.10"),
			("hirsute", "2021.04"),
			("impish", "2021.10"),
			("jammy", "2022.04"),
			("kinetic", "2022.10"),
			("lunar", "2023.04"),
			("mantic", "2023.10"),
		],
		"mirrors": [
			"http://ftp.halifax.rwth-aachen.de/ubuntu/",
			"http://ubuntu.mirror.lrz.de/ubuntu/",
			"http://old-releases.ubuntu.com/ubuntu/",
		],
		"template": """
			deb ${mirror} ${release} main restricted
			deb ${mirror} ${release} multiverse
			deb ${mirror} ${release} universe

			deb ${mirror} ${release}-updates main restricted
			deb ${mirror} ${release}-updates multiverse
			deb ${mirror} ${release}-updates universe

			deb ${mirror} ${release}-security main restricted
			deb ${mirror} ${release}-security multiverse
			deb ${mirror} ${release}-security universe

			deb ${mirror} ${release}-backports main restricted universe multiverse
		""",
	},
	{
		"name": "Debian",
		"releases": [
			("jessie", "4'2015"),
			("stretch", "6'2017"),
			("buster", "7'2019"),
			("bullseye", "8'2021"),
			("bookworm", "6'2023"),
#			("trixie", "N/A"),
#			("forky", "N/A"),
		],
		"mirrors": [
			"http://ftp.de.debian.org/debian/",
		],
		"template": """
			deb ${mirror} ${release} main contrib non-free
			deb-src ${mirror} ${release} main contrib non-free

			deb ${mirror} ${release}/updates main contrib non-free
			deb-src ${mirror} ${release}/updates main contrib non-free

			deb ${mirror} ${release}-updates main
			deb-src ${mirror} ${release}-updates main

			deb ${mirror} ${release}-backports main
			deb-src ${mirror} ${release}-backports main
		""",
	},
]

defs_by_name = { definition["name"]: definition for definition in definitions }

def query(prompt, options, default_option = None):
	for (oid, (value, text)) in enumerate(options, 1):
		if value == default_option:
			print("%2d) %s (default)" % (oid, text))
		else:
			print("%2d) %s" % (oid, text))
	while True:
		value = input(prompt + ": ")
		if (value == "") and (default_option is not None):
			return default_option
		try:
			value = int(value)
		except ValueError:
			continue
		if 1 <= value <= len(options):
			return options[value - 1][0]

def query_list(prompt, options, default_option = None):
	options = [ (option, option) for option in options ]
	return query(prompt, options, default_option)

default_distro = None
with open("/etc/os-release") as f:
	os_release = f.read()
if "Ubuntu" in os_release:
	default_distro = "Ubuntu"

distro = query_list("Distribution", [ distro["name"] for distro in definitions ], default_option = default_distro)
definition = defs_by_name[distro]

default_release = None
with open("/etc/apt/sources.list") as f:
	sources_lst = f.read()
for (release_name, release_data) in definition["releases"]:
	if release_name in sources_lst:
		default_release = release_name
		break

release_query = [ (release_name, "%s (%s)" % (release_name, release_date)) for (release_name, release_date) in definition["releases"] ]
print()
release = query("Release", release_query, default_option = default_release)

print()
mirror = query_list("Mirror", definition["mirrors"], default_option = definition["mirrors"][0])

template = textwrap.dedent(definition["template"]).strip()
template = mako.template.Template(template)

variables = {
	"release":	release,
	"mirror":	mirror,
}
rendered = template.render(**variables)

with open("/etc/apt/sources.list", "w") as f:
	print("# autogenerated by mkapt on %s" % (datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")), file = f)
	print("# DO NOT EDIT MANUALLY", file = f)
	print(file = f)
	print(rendered, file = f)
