#!/usr/bin/python3
#	jbin - Joe's miscellaneous scripts, tools and configs
#	hex2bin: Convert a hex stream of bytes to a binary file
#	Copyright (C) 2023-2023 Johannes Bauer
#
#	This file is part of jbin.
#
#	jbin is free software; you can redistribute it and/or modify
#	it under the terms of the GNU General Public License as published by
#	the Free Software Foundation; this program is ONLY licensed under
#	version 3 of the License, later versions are explicitly excluded.
#
#	jbin is distributed in the hope that it will be useful,
#	but WITHOUT ANY WARRANTY; without even the implied warranty of
#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#	GNU General Public License for more details.
#
#	You should have received a copy of the GNU General Public License
#	along with jbin. If not, see <http://www.gnu.org/licenses/>.
#
#	Johannes Bauer <JohannesBauer@gmx.de>

import sys
import re
from FriendlyArgumentParser import FriendlyArgumentParser

parser = FriendlyArgumentParser()
parser.add_argument("-i", "--input-filename", metavar = "filename", help = "Input filename to read from. Defaults to stdin.")
parser.add_argument("-o", "--output-filename", metavar = "filename", help = "Output filename to write to. Defaults to stdout.")
parser.add_argument("-p", "--permissive", action = "store_true", help = "Do not just filter whitespace, but all non-hex characters from input.")
args = parser.parse_args(sys.argv[1:])

if args.input_filename is not None:
	with open(args.input_filename) as f:
		input_text = f.read()
else:
	input_text = sys.stdin.read()

if not args.permissive:
	input_text = re.sub("\s", "", input_text)
else:
	input_text = re.sub("[^a-fA-F0-9]", "", input_text)

if (len(input_text) % 2) != 0:
	raise ValueError(f"Length of input data not divisible by two (was {len(input_text)} characters).")

byte_data = bytes.fromhex(input_text)

if args.output_filename is not None:
	with open(args.output_filename, "wb") as f:
		f.write(byte_data)
else:
	sys.stdout.buffer.write(byte_data)
